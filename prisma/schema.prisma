generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Admin {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cart      Cart[]
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Product {
  id            String    @id @default(uuid())
  name          String
  description   String?
  price         Float
  stockQuantity Int
  categoryId    String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  carts         Cart[]
  category      Category? @relation(fields: [categoryId], references: [id], map: "Product_categoryId_fkey_unique")

  @@index([categoryId], map: "Product_categoryId_fkey")
}

model Cart {
  id        String   @id @default(uuid())
  userId    String
  productId String
  quantity  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product? @relation(fields: [productId], references: [id], map: "Cart_productId_fkey_unique")
  user      User?    @relation(fields: [userId], references: [id], map: "Cart_userId_fkey_unique")

  @@index([productId], map: "Cart_productId_fkey")
  @@index([userId], map: "Cart_userId_fkey")
}
